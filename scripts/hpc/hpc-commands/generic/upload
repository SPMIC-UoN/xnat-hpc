#!/gpfs01/software/imaging/miniconda3/envs/xnat/bin/python
"""
Script to upload data from an HPC process

The process is responsible for creating data in a subfolder xnat-upload of the
working directory. This should contain a single XML file named according to 
the type of assessor being created. Subfolders are used to store resource
data objects (e.g. images, log files).

If no assessor is created a generic assessor type will be created in order
to attach the process logs to. The likely cause is that the process failed so
the logs may be useful to the user.s
"""
#!/gpfs01/software/imaging/miniconda3/envs/xnat/bin/python
import glob
import sys
import os

__version__ = "0.0.1"

def create_assessor(fname):
    # Create an assessor on XNAT from an XML document
    with open(fname, "r") as f:
        print(f.read())

    cmd = "xnatc --user=%s --password=%s --xnat=%s --project=%s --subject=%s --experiment=%s --create-assessor=%s" % (user, passwd, host, proj, subj, exp, f.name)
    print(cmd)
    os.system(cmd)

def upload_resource(fname, assessor, resource_type):
    # Upload a file as a resource on an assessor
    cmd = "xnatc --user=%s --password=%s --xnat=%s --project=%s --subject=%s --experiment=%s --assessor=%s --upload=%s --upload-resource=%s" % (user, passwd, host, proj, subj, exp, assessor, fname, resource_type))
    print(cmd)
    os.system(cmd)

print("XNAT_HPC: UPLOADER v%s" % __version__)
if len(sys.argv) != 8:
    raise ValueError("Wrong number of arguments: %i (%s)" % (len(sys.argv), sys.argv))
host, proj, subj, exp, user, passwd, workdir = sys.argv[1:]

uploaddir = os.path.join(workdir, "xnat-upload")
if not os.path.exists(uploaddir):
    # FIXME upload logs to where?
    sys.stderr.write("Upload directory %s not found - will continue to upload logs\n")

for assessor in glob.glob(os.path.join("xnat-upload", "*.xml")):
    create_assessor(assessor)
